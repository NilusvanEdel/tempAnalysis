\documentclass{scrartcl}
\title{VR study script}
\subtitle{}
\date{\today}

% specify packages and configs
\usepackage{breakurl}
\def\UrlBreaks{\do\/\do-}
\usepackage{graphicx}
\usepackage{float}
\usepackage{natbib}
\usepackage{usebib}
\usepackage{lmodern}
\usepackage{slantsc}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}
\hypersetup{colorlinks=true,
  linkcolor=black,
  citecolor=black,
  urlcolor=blue}


\begin{document}
\pagenumbering{gobble}
\maketitle
\newpage
\pagenumbering{arabic}

\section{R setup}
\label{sec:r-setup}

The first thing we do is set a random seed for R. This ensures we can
reproduce any analysis that has a random component.

<<set-seed>>=
our_seed <- 123
set.seed(our_seed)
@

We'll use `\Sexpr{our_seed}' as our seed. Next we need to load the
libraries.

<<load-libraries>>=
library(lme4)
library(afex)
library(cowplot)
library(DHARMa)
library(xtable)
library(rockchalk)
library(tikzDevice)
library(parallel)
library(fifer)
@

\section{Reading the files}
\label{sec:read-data}
We now read in the data files.

<<read-data>>=
child.data <- read.csv("vr_data/childrenCSV.csv")
carsac.data <- read.csv("vr_data/selfSacCSV.csv")
sidewalk.data <- read.csv("vr_data/sidewalkCSV.csv")
@

Some of the variables need cleaning, so we rename them.
<<rename-variables>>=

# rename gender variable
colnames(child.data)[2] <- "gender"

# rename driver variable
colnames(child.data)[3] <- "motorist"

# rename levels for driver
child.data$motorist <- factor(child.data$motorist,
                            levels = c("False", "True"),
                            labels = c("human", "self-driving"))

# set participant to factor
child.data$participant.ID <- factor(child.data$participant.ID)

# rename levels for gender
child.data$gender <- factor(child.data$gender,
                            levels = c("False", "True"),
                            labels = c("female", "male"))

# remove sanity check and perception check failures
child.sub <- subset(child.data, child.data$passedSanCheck == "True")
child.sub <- subset(child.sub, !(child.sub$perceivedCar == "Mensch" &
                                 child.sub$motorist == "self-driving"))



# carsac

# rename gender variable
colnames(carsac.data)[2] <- "gender"

# rename driver variable
colnames(carsac.data)[3] <- "motorist"

# rename levels for driver
carsac.data$motorist <- factor(carsac.data$motorist,
                            levels = c("False", "True"),
                            labels = c("human", "self-driving"))

carsac.data$participant.ID <- factor(carsac.data$participant.ID)

# rename levels for gender
carsac.data$gender <- factor(carsac.data$gender,
                            levels = c("False", "True"),
                            labels = c("female", "male"))

carsac.sub <- subset(carsac.data, carsac.data$passedSanCheck == "True")
carsac.sub <- subset(carsac.sub, !(carsac.sub$perceivedCar == "Mensch" &
                                   carsac.sub$motorist == "self-driving"))



# sidewalk

# rename gender variable
colnames(sidewalk.data)[2] <- "gender"

# rename driver variable
colnames(sidewalk.data)[3] <- "motorist"

# set participant to factor
sidewalk.data$participant.ID <- factor(sidewalk.data$participant.ID)

# rename levels for driver
sidewalk.data$motorist <- factor(sidewalk.data$motorist,
                            levels = c("False", "True"),
                            labels = c("human", "self-driving"))


# rename levels for gender
sidewalk.data$gender <- factor(sidewalk.data$gender,
                            levels = c("False", "True"),
                            labels = c("female", "male"))

# sanity check
sidewalk.sub <- subset(sidewalk.data, sidewalk.data$passedSanCheck == "True")
sidewalk.sub <- subset(sidewalk.sub, !(sidewalk.sub$perceivedCar == "Mensch" &
                                       sidewalk.sub$motorist == "self-driving"))
@

\section{Manipulation check}
\label{sec:manip-check}

We use a \(\chi^2\) goodness of fit test to see if perspective
affects identification.  First we create a subset of only one trial,
and collapse the two pedestrian perspectives.
<<manip-check-sub>>=
manip_check.sub <- subset(child.sub, trial == "largeGroups")

manip_check.sub$perspective <- combineLevels(manip_check.sub$perspective,
                                             levs = c("PedLarge", "PedSmall"),
                                             newLabel = c("Pedestrian"))

@

Next we create a contingency table.
<<manip-check-table, results = 'asis'>>=
manip_check.xtab <- xtabs(~perspective + perceivedIden, data = manip_check.sub)
print(xtable(manip_check.xtab))
@

Then we compute the test statistic.
<<manip-check-chisq>>=
manip_check.chisq <- chisq.test(manip_check.xtab, simulate.p.value = TRUE)
manip_check.chisq
@

If the test statistic is significant, we perform follow-up comparisons.

<<manip-check-posthoc, results='asis'>>=
alpha <- 0.05
if (manip_check.chisq$p.value <= alpha){
    manip_check.post <- chisq.post.hoc(manip_check.xtab)
    }
print(xtable(manip_check.post))
@

\section{Child vs adult dilemmas}
\label{sec:child}

\subsection{The model}
\label{sec:child-model}

We run a logit mixed model to predict the decision of the participants.

<<child-adult-glmm,results='asis'>>=
(nc <- detectCores())
cl <- makeCluster(rep("localhost", nc))

child_glmm <- mixed(decision ~ perspective + motorist +
                        perspective:motorist +
                        trial +
                        (1 | participant.ID),
                    method = "LRT", # change to PB for final
                    family = "binomial", data = child.sub,
                    args_test = list(nsim = 100, cl = cl), cl = cl,
                    control = glmerControl(optimizer = "bobyqa",
                                           optCtrl = list(maxfun = 2e5)))
stopCluster(cl)
child_glmm_anova <- child_glmm$anova_table
print(xtable(child_glmm_anova))
@

We then check the residuals of the model.
<<check-resid>>=
child_glmm.resid <- simulateResiduals(
    fittedModel = child_glmm$full_model,
    n = 2000)
child_glmm_resid.plot <- plotSimulatedResiduals(
    simulationOutput = child_glmm.resid)
@

If they look okay, we follow up any significant differences.

\subsection{Plotting}
\label{sec:child-plot}

We start by creating a set of predicted data to plot.
<<child-pred>>=
trial <- rep(c("smallGroups", "largeGroups"), 8)
perspective <- rep(c("Observer", "Passenger", "PedLarge", "PedSmall"), each = 2)
motorist <- rep(c("human", "self-driving"), each = 8)
child_plot.data <- data.frame(trial, perspective, motorist)

child_plot.data$decision <- predict(child_glmm$full_model,
                                     newdata = child_plot.data,
                                     re.form = NA,
                                     type = "response")

@

Then we create the plot.
<<child-plot>>=
child.plot <- ggplot(child_plot.data,
                      aes(trial,
                          as.numeric(decision),
                          color = perspective)) +
    geom_point() +
    geom_line(aes(group = perspective)) +
    facet_grid(. ~ motorist) +
    theme_cowplot(font_size = 10) + geom_point() +
    scale_y_continuous(name = "P(Choosing `hit children' as more acceptable)",
                       limits = c(0, 1)) + coord_equal(ratio = 3) +
    scale_color_manual(name = "Perspective",
                       labels = c("Bystander",
                                  "Passenger",
                                  "Pedestrian wAdults",
                                  "Pedestrian wChildren"),
                       values = c("red3", "skyblue", "orange1", "purple"))
child.plot

@

\subsection{Follow-up comparisons}
\label{sec:child-followup}

If we find an interaction between perspective and motorist-type we
should follow that up with comparisons of perspective within each
level of motorist.

<<child-int,results='asis'>>=
emm_child_i <- emmeans(child_glmm, pairwise ~ perspective | motorist,
                       type = "response")
xtable(emm_child_i$contrasts)
@

If we find no interaction but a significant main effect of
perspective, we need to do follow-up multiple comparisons to find out
where the difference is.

<<child-persp,results='asis'>>=
emm_child_persp <- emmeans(child_glmm, pairwise ~ perspective,
                           type = 'response')
xtable(emm_child_persp$contrasts)
@

If we find a main effect of motorist-type, we need to calculate the
marginal means to see the effect.

<<child-motorist,results='asis'>>=
emm_child_motorist <- emmeans(child_glmm, pairwise ~ motorist,
                              type = 'response')
xtable(emm_child_motorist$contrasts)
@


\section{Car occupants vs pedestrians dilemma}
\label{sec:carped}

We collapse both pedestrian perspectives for this dilemma.
<<carped-clean>>=
carsac.sub$perspective <- combineLevels(carsac.sub$perspective,
                                        levs=c("PedLarge", "PedSmall"),
                                        newLabel = "Pedestrian")

@

\subsection{The model}
\label{sec:carped-glmm}
<<carped-glmm,results='asis'>>=
(nc <- detectCores())
cl <- makeCluster(rep("localhost", nc))

carsac_glmm <- mixed(decision ~ perspective + motorist +
                        perspective:motorist +
                        trial +
                        (1 | participant.ID),
                    method = "LRT", # change to PB for final
                    family = "binomial", data = carsac.sub,
                    args_test = list(nsim = 100, cl = cl), cl = cl,
                    control = glmerControl(optimizer = "bobyqa",
                                           optCtrl = list(maxfun = 2e5)))
stopCluster(cl)
xtable(carsac_glmm$anova_table)
@

Then we check the residuals.

<<carped-resid>>=
carsac_glmm.resid <- simulateResiduals(
    fittedModel = carsac_glmm$full_model, n = 2000)
carsac_glmm_resid.plot <- plotSimulatedResiduals(
    simulationOutput = carsac_glmm.resid)
@

\subsection{Plotting}
\label{sec:carped-plot}

<<carped-pred>>=
trial <- rep(c("cityR", "mountain"), 6)
perspective <- rep(c("Observer", "Passenger", "Pedestrian"), each = 2)
motorist <- rep(c("human", "self-driving"), each = 6)
carsac_plot.data <- data.frame(trial, perspective, motorist)

carsac_plot.data$decision <- predict(carsac_glmm$full_model,
                                     newdata = carsac_plot.data,
                                     re.form = NA,
                                     type = "response")
@

<<carped-plot>>=
carsac.plot <- ggplot(carsac_plot.data,
                      aes(trial,
                          as.numeric(decision),
                          color = perspective)) +
    geom_point() +
    geom_line(aes(group = perspective)) +
    facet_grid(. ~ motorist) +
    theme_cowplot(font_size = 10) + geom_point() +
    scale_y_continuous(name = "P(Choosing `crash car' as more acceptable)",
                       limits = c(0, 1)) + coord_equal(ratio = 3) +
    scale_color_manual(name = "Perspective",
                       labels = c("Bystander",
                                  "Passenger",
                                  "Pedestrian"),
                       values = c("red3", "skyblue", "orange1" , "purple"))

carsac.plot
@

\subsection{Follow-up analyses}
\label{sec:carped-followup}

If we find an interaction between perspective and motorist-type we
should follow that up with comparisons of perspective within each
level of motorist.

<<carsac-int,results='asis'>>=
emm_carsac_i <- emmeans(carsac_glmm, pairwise ~ perspective | motorist,
                        type = 'response')
xtable(emm_carsac_i$contrasts)
@

If we find no interaction but a significant main effect of
perspective, we need to do follow-up multiple comparisons to find out
where the difference is.

<<carsac-persp,results='asis'>>=
emm_carsac_persp <- emmeans(carsac_glmm, pairwise ~ perspective,
                            type = 'response')
xtable(emm_carsac_persp$contrasts)
@

If we find a main effect of motorist-type, we need to calculate the
marginal means to see the effect.

<<carsac-motorist,results='asis'>>=
emm_carsac_motorist <- emmeans(carsac_glmm, pairwise ~ motorist,
                               type = 'response')
xtable(emm_carsac_motorist$contrasts)
@

\section{Sidewalk vs road dilemma}
\label{sec:sidewalk}

We collapse both pedestrian perspectives for this dilemma.
<<sidewalk-clean>>=
sidewalk.sub$perspective <- combineLevels(sidewalk.sub$perspective,
                                        levs=c("PedLarge", "PedSmall"),
                                        newLabel = "Pedestrian")

@

\subsection{The model}
\label{sec:sidewalk-glmm}
<<sidewalk-glmm,results='asis'>>=
(nc <- detectCores())
cl <- makeCluster(rep("localhost", nc))

sidewalk_glmm <- mixed(decision == 'hitSidewalk' ~ perspective +
                        motorist +
                        perspective:motorist +
                        trial +
                        (1 | participant.ID),
                    method = "LRT", # change to PB for final
                    family = "binomial", data = sidewalk.sub,
                    args_test = list(nsim = 100, cl = cl), cl = cl,
                    control = glmerControl(optimizer = "bobyqa",
                                           optCtrl = list(maxfun = 2e5)))
stopCluster(cl)
xtable(sidewalk_glmm$anova_table)
@

Then we check the residuals.

<<sidewalk-resid>>=
sidewalk_glmm.resid <- simulateResiduals(
    fittedModel = sidewalk_glmm$full_model, n = 2000)
sidewalk_glmm_resid.plot <- plotSimulatedResiduals(
    simulationOutput = sidewalk_glmm.resid)
@

\subsection{Plotting}
\label{sec:sidewalk-plot}

<<sidewalk-pred>>=
trial <- rep(c("smallGroups", "largeGroups"), 6)
perspective <- rep(c("Observer", "Passenger", "Pedestrian"), each = 2)
motorist <- rep(c("human", "self-driving"), each = 6)
sidewalk_plot.data <- data.frame(trial, perspective, motorist)

sidewalk_plot.data$decision <- predict(sidewalk_glmm$full_model,
                                     newdata = sidewalk_plot.data,
                                     re.form = NA,
                                     type = "response")
@

<<sidewalk-plot>>=
sidewalk.plot <- ggplot(sidewalk_plot.data,
                      aes(trial,
                          as.numeric(decision),
                          color = perspective)) +
    geom_point() +
    geom_line(aes(group = perspective)) +
    facet_grid(. ~ motorist) +
    theme_cowplot(font_size = 10) + geom_point() +
    scale_y_continuous(
        name = "P(Choosing `swerve to sidewalk' as more acceptable)",
                       limits = c(0, 1)) + coord_equal(ratio = 3) +
    scale_color_manual(name = "Perspective",
                       labels = c("Bystander",
                                  "Passenger",
                                  "Pedestrian"),
                       values = c("red3", "skyblue",
                                  "orange1" , "purple"))

sidewalk.plot
@

\subsection{Follow-up analyses}
\label{sec:sidewalk-followup}

If we find an interaction between perspective and motorist-type we
should follow that up with comparisons of perspective within each
level of motorist.

<<sidewalk-int,results='asis'>>=
emm_sidewalk_i <- emmeans(sidewalk_glmm, pairwise ~ perspective | motorist,
                          type = 'response')
xtable(emm_sidewalk_i$contrasts)
@

If we find no interaction but a significant main effect of
perspective, we need to do follow-up multiple comparisons to find out
where the difference is.

<<sidewalk-persp,results='asis'>>=
emm_sidewalk_persp <- emmeans(sidewalk_glmm, pairwise ~ perspective,
                              type = 'response')
xtable(emm_sidewalk_persp$contrasts)
@

If we find a main effect of motorist-type, we need to calculate the
marginal means to see the effect.

<<sidewalk-motorist,results='asis'>>=
emm_sidewalk_motorist <- emmeans(sidewalk_glmm, pairwise ~ motorist,
                                 type = 'response')
xtable(emm_sidewalk_motorist$contrasts)
@




\end{document}
